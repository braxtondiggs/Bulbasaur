name: Deploy to Firebase

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

env:
  NODE_VERSION: '20'
  CACHE_KEY_PREFIX: 'bulbasaur-v1'

jobs:
  # Quality checks and testing
  quality:
    name: Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: success()
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # Build application
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: quality
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/
          retention-days: 1

  # Build and test functions
  functions:
    name: Build Functions
    runs-on: ubuntu-latest
    needs: quality
    timeout-minutes: 10
    defaults:
      run:
        working-directory: functions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json

      - name: Install dependencies
        run: npm ci

      # - name: Run function tests
      #   run: npm run test

      - name: Build functions
        run: npm run build

      - name: Upload function artifacts
        uses: actions/upload-artifact@v4
        with:
          name: functions-${{ github.sha }}
          path: functions/lib/
          retention-days: 1

  # Deploy to Firebase (production)
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, functions]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/

      - name: Download function artifacts
        uses: actions/download-artifact@v4
        with:
          name: functions-${{ github.sha }}
          path: functions/lib/

      - name: Install function dependencies
        run: npm ci
        working-directory: functions

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.GCP_SA_KEY }}'
          channelId: live
          projectId: bulbasaur-bfb64

      - name: Deploy Functions to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

  # Preview deployment for PRs
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [build, functions]
    if: github.event_name == 'pull_request'
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/

      - name: Install function dependencies
        run: npm ci
        working-directory: functions

      - name: Deploy to Firebase Preview
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.GCP_SA_KEY }}'
          projectId: bulbasaur-bfb64
